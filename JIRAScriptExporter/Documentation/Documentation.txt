
    *********************************************
    *            JIRA Script Exporter           *
    *            by Andrea Dell'Orto            *
    *                 v. 0.0.1                  *
    *********************************************

Purpose of the program:

this program was intended to connect to a JIRA instance, open a task, download a csv or txt file containing script names
and write the full local path of those files in a txt instruction file.

-The program workflow is as follow:

	1. Connection to an Atlassian JIRA (link was derived from a cfg file).
	2. If connection is successfully established, the program tries to download the file (the standard for the filename is defined into a cfg file)
	3. If the file's download is successfull, the program reads the file names and put them into a List.
	4. The program search for those files in a specified directory (from the cfg file) and its subdirectories.
	5. When the files are found the full path is written in a txt file starting from the line following a line composed only by a $ or in append from a model given in input.

-HowTo: Use of the JIRAExporter.cfg file to configure the program

	[jira]
	url		= Url of the JIRA you wanto connet the program to
	jira_user	= JIRA username to use
	jira_password	= JIRA password to use
	
	[script]
	file_name 	= The file attached to the issue you want to read from
	split_enabled	= If true it splits the values
	split_separator = Separator for splitting (in csv is usually a comma  ',')
	inst_filename	= Instruction file name
	
	[system]
	root_find	= Here goes the path where the script will search for the scripts found in the jira attachment
	relative	= This flag tells the program that the output file need the relative path of the script
	model		= This flag tells the program to use a model as an output file
	model_name	= The name of the model
	source_type	= The type of the source file we're reading from, values are CSV or TXT
	validate	= Flag to enable validation of the scripts
	is_debug	= Flag to enable debug mode
	
	[errors], [base_elements] These categories can be populated with your own errors and base element for scripts validation